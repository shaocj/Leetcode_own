c++:
#include <iostream>
#include <vector>
#include<algorithm>
using namespace std;

void conv(vector<int>& nums,vector<vector<int> >& bak,int start){
   if(nums.size() == start){
       bak.push_back(nums);
       return;
   }
   for(int i = start; i < nums.size(); i++){
       swap(nums[start],nums[i]);
       conv(nums,bak,start + 1);
       swap(nums[start],nums[i]);
   }
}
vector<vector<int> > permute(vector<int>& nums)  {
   vector<vector<int> > bak;
   int n = nums.size() ;
   if(n == 0) {
       bak.push_back(nums);
       return bak;
   }
   //sort(nums.begin(),nums.end());
   conv(nums,bak,0);
   return bak;
}

void printInt(int v)
{
    cout<<v<<'\t';
}
void printNesting(vector<int> v)
{
    //这些都是前面现成的
    vector<int>::iterator begin = v.begin();
    vector<int>::iterator end = v.end();
    for_each(begin,end,printInt);
    cout<<endl;
}


int main()
{
    int a[5] = {1,2,3};
    vector<int> b(a, a+3);
    vector<vector<int> > nums;
    nums = permute(b);
    vector<vector<int> >::iterator begin = nums.begin();
    vector<vector<int> >::iterator end = nums.end();
    for_each(begin,end,printNesting);
    return 0;
}
