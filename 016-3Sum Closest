C:
 void sort(int* nums, int begin, int end)
{
    int l=begin, r=end;
    int v = nums[l+(r-l)/2];
    while(l <= r)
    {
        while(nums[l] < v) l++;
        while(nums[r] > v) r--;
        if(l <= r)
        {
            int t = nums[l];
            nums[l] = nums[r];
            nums[r] = t;
            l++; r--;
        }
    }
    if(r > begin)
        sort(nums, begin, r);
    if(l < end)
        sort(nums, l, end);
}
int threeSumClosest(int* nums, int numsSize, int target) {
    sort(nums,0,numsSize-1);
    int res = 0, flag = 0;;
    for(int i=0;i<numsSize-2;i++){
        while(i>0 && i<numsSize-2 && nums[i]==nums[i-1]) i++;
        int start = i+1;
        int end = numsSize-1;
        int sum = 0;
        while(start<end){
            sum = nums[i]+nums[start]+nums[end];
            if(flag==1)
                res = (abs(sum-target))<(abs(res-target))?sum:res;
            else
                res = sum;
            
            flag=1;
            
            if((sum-target)<0)
                start++;
            else if((sum-target)>0)
                end--;
            else
                return res;
        }
    }
    return res;
}
