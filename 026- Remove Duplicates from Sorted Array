c++:
1、
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        if (nums.empty()) return 0;
        int j = 0, n = nums.size();
        for (int i = 0; i < n; ++i) {
            if (nums[i] != nums[j]) nums[++j] = nums[i];
        }
        return j + 1;
    }
};
2、
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        if (nums.empty()) return 0;
        int pre = 0, cur = 0, n = nums.size();
        while (cur < n) {
            if (nums[pre] == nums[cur]) ++cur;
            else nums[++pre] = nums[cur++];
        }
        return pre + 1;
    }
};

c:
1、
int removeDuplicates(int* nums, int numsSize) 
{
  if(!numsSize)
    return numsSize;
  int pos = 1, len = 1; 
  for(int i = 1; i < numsSize; i++)
  {
    if(nums[i-1] != nums[i])
    {
      nums[pos] = nums[i]; 
      pos++; ++len;
    }
  }
printf("len=%d",len);
  return len;
}

2、
int removeDuplicates(int* nums, int numsSize) {
    int labels[128] = {0};
    int i;
    int j=0,length=0;
    int* arr = (int*)malloc(sizeof(int)*128);
    for(i=0;i<numsSize;i++)
    {
        if(labels[nums[i]] == 0)
        {
            labels[nums[i]]=1;
            arr[j++]=nums[i];
            ++length;
            
        }
    }
   
    return length;
}



