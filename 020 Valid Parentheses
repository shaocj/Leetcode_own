C++;
https://www.cnblogs.com/grandyang/p/4424587.html
class Solution {
public:
    bool isValid(string s) {
        stack<char> parentheses;
        for (int i = 0; i < s.size(); ++i) {
            if (s[i] == '(' || s[i] == '[' || s[i] == '{') parentheses.push(s[i]);
            else {
                if (parentheses.empty()) return false;
                if (s[i] == ')' && parentheses.top() != '(') return false;
                if (s[i] == ']' && parentheses.top() != '[') return false;
                if (s[i] == '}' && parentheses.top() != '{') return false;
                parentheses.pop();
            }
        }
        return parentheses.empty();
    }
};
C:

bool isValid(char *s) {
    char *flag = (char *)malloc(strlen(s));
    int pos = 0;
    while(*s) {
        switch (*s) {
            case '(':
            case '{':
            case '[':
                flag[pos++] = *s;
                break;
            case ')':
                if (flag[pos-1] == '(') --pos;
                else return false;
                break;
            case '}':
                if (flag[pos-1] == '{') --pos;
                else return false;
                break;
            case ']':
                if (flag[pos-1] == '[') --pos;
                else return false;
                break;
        }
        ++s;
    }
    return pos == 0;
}

2、Pyhton:


https://www.cnblogs.com/grandyang/p/4084408.html
